{
   "root": true,
   "label": "Template",
   "children": [
      {
         "root": false,
         "label": "Template Builder",
         "element": {
            "enabled": true,
            "row": 0,
            "col": 0,
            "sizeX": 1,
            "sizeY": 1,
            "expandable": true,
            "configurable": true,
            "deletable": true,
            "form_model": {
               "expandable": false,
               "key": "enrichment_meta",
               "sub_keys": "",
               "categories": "Javascript",
               "filters": "Bucket/**",
               "child_filters": ""
            },
            "template": {
               "display_name": "Template Builder",
               "form_info": "Create a new template element",
               "filters": [
                  "Template"
               ],
               "expandable": true,
               "key": "template_builder",
               "categories": [
                  "Template"
               ],
               "schema": [
                  {
                     "key": "_short_name",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Template Name",
                        "placeholder": "The template name",
                        "required": true
                     }
                  },
                  {
                     "key": "_summary",
                     "type": "horizontalTextArea",
                     "defaultValue": "<p>Help here</p>",
                     "templateOptions": {
                        "label": "Form Info",
                        "placeholder": "Text or HTML providing help for the user",
                        "required": true
                     }
                  },
                  {
                     "key": "key",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Role/Key",
                        "placeholder": "The role name of the template (used in parent and child filters)",
                        "required": true
                     }
                  },
                  {
                     "key": "sub_keys",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Sub-Role/Keys",
                        "placeholder": "Optional sub-keys used only in child filters",
                        "required": false
                     }
                  },
                  {
                     "key": "categories",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Categories",
                        "placeholder": "Comma-separated list of categories (determines folder name)",
                        "required": true
                     }
                  },
                  {
                     "key": "filters",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Parent Filters",
                        "placeholder": "Comma-separated list of filters determining for which parents this should be displayed",
                        "required": false
                     }
                  },
                  {
                     "key": "expandable",
                     "type": "horizontalCheckbox",
                     "defaultValue": false,
                     "templateOptions": {
                        "label": "Allow child elements",
                        "required": false
                     }
                  },
                  {
                     "key": "child_filters",
                     "type": "horizontalInput",
                     "hideExpression": "!model.expandable",
                     "templateOptions": {
                        "label": "Child Filters",
                        "placeholder": "Comma-separated list of filters determining which child elements should be displayed",
                        "required": false
                     }
                  }
               ],
               "building_function": {
                  "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n\t\tvar obj = {}; \n\t\tobj.display_name = template.element.short_name; \n\t\tobj.form_info = template.element.summary;\n\t\ta2_copy(template.element.form_model, obj);\n\t\tobj.categories = a2_csv_to_array(obj.categories);\n\t\tobj.sub_keys = a2_csv_to_array(obj.sub_keys);\n  \t\tif (0 == (obj.sub_keys || []).length) obj.sub_keys = undefined;\n\t\tobj.filters = a2_csv_to_array(obj.filters);\n\t\tobj.child_filters = a2_csv_to_array(obj.child_filters);\n\t\tobj.schema = []; \n\t\tcurr_obj.push(obj); \n\t\treturn obj;  \n}"
               },
               "post_building_function": {
                  "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}"
               }
            },
            "short_name": "Javascript Enrichment",
            "summary": "JS Enrichment element, allows writing some JS to run in the pipeline"
         },
         "children": [
            {
               "root": false,
               "label": "Builder Functions",
               "element": {
                  "enabled": true,
                  "short_name": "Builder Functions",
                  "summary": "Creating the element from JSON",
                  "row": 0,
                  "col": 0,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "deletable": true,
                  "form_model": {
                     "pre_fn": "function (errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {             \n        var config_obj = {};\n        config_obj.entry_point = template.element.form_model.entry_point;\n        config_obj.module_name_or_id = template.element.form_model.module_name_or_id;\n        config_obj.name = template.element.form_model.name;\n        config_obj.enabled = true;\n        config_obj.library_names_or_ids = template.element.form_model.library_names_or_ids;\n        var script_obj = {};\n        script_obj.script = template.element.form_model.js_script;\n        config_obj.config = script_obj;\n         a2_inject_enrichment(curr_obj, config_obj); \n      }",
                     "post_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}"
                  },
                  "template": {
                     "display_name": "Builder Functions",
                     "form_info": "<p>Write functions to build the objects and sub-objects based on the fields of the forms</p>\n<p>builder_function runs before the element's children; post_builder_function runs afterwards</p>",
                     "filters": [
                        "Template/template_builder"
                     ],
                     "expandable": false,
                     "key": "local_function",
                     "categories": [
                        "Developer"
                     ],
                     "schema": [
                        {
                           "key": "pre_fn",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Building Function",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        },
                        {
                           "key": "post_fn",
                           "type": "code_input",
                           "defaultValue": "{\n}",
                           "templateOptions": {
                              "label": "Post Building Function",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ],
                     "default_model": {
                        "pre_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}",
                        "post_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}"
                     },
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n \tcurr_obj.building_function = {'$fn': template.element.form_model.pre_fn};\n \tcurr_obj.post_building_function = {'$fn': template.element.form_model.post_fn}; \n}"
                     },
                     "post_building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}"
                     }
                  }
               },
               "children": []
            },
            {
               "root": false,
               "label": "Raw Form JSON",
               "element": {
                  "enabled": true,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "configurable": true,
                  "deletable": true,
                  "form_model": {
                     "json": "[{\"key\":\"name\",\"type\":\"horizontalInput\",\"templateOptions\":{\"label\":\"Unique Job Name\",\"pattern\":\"[a-zA-Z0-9_]+\",\"placeholder\":\"A Short Name For This Element (Alphanumeric/_ only, no spaces - used for dependencies etc)\",\"required\":true}}]"
                  },
                  "template": {
                     "display_name": "Raw Form JSON",
                     "key": "template_element",
                     "categories": [
                        "Generic"
                     ],
                     "filters": [
                        "Template/template_builder",
                        "Template/**/template_builder"
                     ],
                     "expandable": false,
                     "form_info": "Type raw JSON objects into here to insert them into the schema",
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) { var obj = eval('(' + template.element.form_model.json + ')'); for (i in obj) curr_obj.schema.push(obj[i]); }"
                     },
                     "default_model": {
                        "json": "[\n\t\t{\n\t\t\t\"key\": \"_short_name\",\n\t\t\t\"type\": \"horizontalInput\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Function Name\",\n\t\t\t\t\"placeholder\": \"The function name (Give it a unique name)\",\n\t\t\t\t\"required\": true\n\t\t\t}\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"key\": \"js\",\n\t\t\t\"type\": \"code_input\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Global Function\",\n\t\t\t\t\"codemirror\": {\n\t\t\t\t\t\"lineNumbers\": true,\n\t\t\t\t\t\"smartIndent\": true,\n\t\t\t\t\t\"mode\": \"javascript\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n]"
                     },
                     "schema": [
                        {
                           "key": "json",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Raw Form JSON",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ]
                  },
                  "row": 0,
                  "col": 1,
                  "short_name": "Unique Job Name",
                  "summary": "Type: horizontalInput"
               },
               "children": []
            },
            {
               "root": false,
               "label": "Raw Form JSON",
               "element": {
                  "enabled": true,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "configurable": true,
                  "deletable": true,
                  "form_model": {
                     "json": "[{\"key\":\"module_name_or_id\",\"type\":\"horizontalInput\",\"defaultValue\":\"/app/aleph2/library/enrichment_utils.jar\",\"templateOptions\":{\"label\":\"Module Name or ID\",\"placeholder\":\"Library needed for this batch enrichment engine\",\"required\":true}}]"
                  },
                  "template": {
                     "display_name": "Raw Form JSON",
                     "key": "template_element",
                     "categories": [
                        "Generic"
                     ],
                     "filters": [
                        "Template/template_builder",
                        "Template/**/template_builder"
                     ],
                     "expandable": false,
                     "form_info": "Type raw JSON objects into here to insert them into the schema",
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) { var obj = eval('(' + template.element.form_model.json + ')'); for (i in obj) curr_obj.schema.push(obj[i]); }"
                     },
                     "default_model": {
                        "json": "[\n\t\t{\n\t\t\t\"key\": \"_short_name\",\n\t\t\t\"type\": \"horizontalInput\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Function Name\",\n\t\t\t\t\"placeholder\": \"The function name (Give it a unique name)\",\n\t\t\t\t\"required\": true\n\t\t\t}\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"key\": \"js\",\n\t\t\t\"type\": \"code_input\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Global Function\",\n\t\t\t\t\"codemirror\": {\n\t\t\t\t\t\"lineNumbers\": true,\n\t\t\t\t\t\"smartIndent\": true,\n\t\t\t\t\t\"mode\": \"javascript\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n]"
                     },
                     "schema": [
                        {
                           "key": "json",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Raw Form JSON",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ]
                  },
                  "row": 0,
                  "col": 2,
                  "short_name": "Module Name or ID",
                  "summary": "Type: horizontalInput"
               },
               "children": []
            },
            {
               "root": false,
               "label": "Raw Form JSON",
               "element": {
                  "enabled": true,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "configurable": true,
                  "deletable": true,
                  "form_model": {
                     "json": "[{\"key\":\"entry_point\",\"type\":\"horizontalInput\",\"defaultValue\":\"com.ikanow.aleph2.enrichment.utils.services.JsScriptEngineService\",\"templateOptions\":{\"label\":\"Entry Point\",\"placeholder\":\"Class path to enrichment entry point.\",\"required\":true}}]"
                  },
                  "template": {
                     "display_name": "Raw Form JSON",
                     "key": "template_element",
                     "categories": [
                        "Generic"
                     ],
                     "filters": [
                        "Template/template_builder",
                        "Template/**/template_builder"
                     ],
                     "expandable": false,
                     "form_info": "Type raw JSON objects into here to insert them into the schema",
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) { var obj = eval('(' + template.element.form_model.json + ')'); for (i in obj) curr_obj.schema.push(obj[i]); }"
                     },
                     "default_model": {
                        "json": "[\n\t\t{\n\t\t\t\"key\": \"_short_name\",\n\t\t\t\"type\": \"horizontalInput\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Function Name\",\n\t\t\t\t\"placeholder\": \"The function name (Give it a unique name)\",\n\t\t\t\t\"required\": true\n\t\t\t}\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"key\": \"js\",\n\t\t\t\"type\": \"code_input\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Global Function\",\n\t\t\t\t\"codemirror\": {\n\t\t\t\t\t\"lineNumbers\": true,\n\t\t\t\t\t\"smartIndent\": true,\n\t\t\t\t\t\"mode\": \"javascript\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n]"
                     },
                     "schema": [
                        {
                           "key": "json",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Raw Form JSON",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ]
                  },
                  "row": 0,
                  "col": 3,
                  "short_name": "Entry Point",
                  "summary": "Type: horizontalInput"
               },
               "children": []
            },
            {
               "root": false,
               "label": "Raw Form JSON",
               "element": {
                  "enabled": true,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "configurable": true,
                  "deletable": true,
                  "form_model": {
                     "json": "[{\"key\":\"library_names_or_ids\",\"type\":\"multiInput\",\"defaultValue\":[\"/app/aleph2/library/enrichment_utils.jar\"],\"templateOptions\":{\"label\":\"Additional javascript libraries\",\"inputOptions\":{\"type\":\"input\"},\"placeholder\":\"Path for any additional javascript libraries required\",\"required\":false}}]"
                  },
                  "template": {
                     "display_name": "Raw Form JSON",
                     "key": "template_element",
                     "categories": [
                        "Generic"
                     ],
                     "filters": [
                        "Template/template_builder",
                        "Template/**/template_builder"
                     ],
                     "expandable": false,
                     "form_info": "Type raw JSON objects into here to insert them into the schema",
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) { var obj = eval('(' + template.element.form_model.json + ')'); for (i in obj) curr_obj.schema.push(obj[i]); }"
                     },
                     "default_model": {
                        "json": "[\n\t\t{\n\t\t\t\"key\": \"_short_name\",\n\t\t\t\"type\": \"horizontalInput\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Function Name\",\n\t\t\t\t\"placeholder\": \"The function name (Give it a unique name)\",\n\t\t\t\t\"required\": true\n\t\t\t}\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"key\": \"js\",\n\t\t\t\"type\": \"code_input\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Global Function\",\n\t\t\t\t\"codemirror\": {\n\t\t\t\t\t\"lineNumbers\": true,\n\t\t\t\t\t\"smartIndent\": true,\n\t\t\t\t\t\"mode\": \"javascript\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n]"
                     },
                     "schema": [
                        {
                           "key": "json",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Raw Form JSON",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ]
                  },
                  "row": 1,
                  "col": 0,
                  "short_name": "Additional javascript libraries",
                  "summary": "Type: multiInput"
               },
               "children": []
            },
            {
               "root": false,
               "label": "Raw Form JSON",
               "element": {
                  "enabled": true,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "configurable": true,
                  "deletable": true,
                  "form_model": {
                     "json": "[{\"key\":\"js_script\",\"type\":\"code_input\",\"defaultValue\":\"function handle_batch_java(json_stream, len, grouping_key) {\\n\\tvar it = json_stream.iterator();\\n\\twhile (it.hasNext()) {\\n\\t\\tvar json = it.next();\\n\\t\\t_a2.emit(json);\\n\\t}\\n}\",\"templateOptions\":{\"label\":\"JS code to run\",\"codemirror\":{\"lineNumbers\":true,\"smartIndent\":true,\"mode\":\"javascript\"}}}]"
                  },
                  "template": {
                     "display_name": "Raw Form JSON",
                     "key": "template_element",
                     "categories": [
                        "Generic"
                     ],
                     "filters": [
                        "Template/template_builder",
                        "Template/**/template_builder"
                     ],
                     "expandable": false,
                     "form_info": "Type raw JSON objects into here to insert them into the schema",
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) { var obj = eval('(' + template.element.form_model.json + ')'); for (i in obj) curr_obj.schema.push(obj[i]); }"
                     },
                     "default_model": {
                        "json": "[\n\t\t{\n\t\t\t\"key\": \"_short_name\",\n\t\t\t\"type\": \"horizontalInput\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Function Name\",\n\t\t\t\t\"placeholder\": \"The function name (Give it a unique name)\",\n\t\t\t\t\"required\": true\n\t\t\t}\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"key\": \"js\",\n\t\t\t\"type\": \"code_input\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Global Function\",\n\t\t\t\t\"codemirror\": {\n\t\t\t\t\t\"lineNumbers\": true,\n\t\t\t\t\t\"smartIndent\": true,\n\t\t\t\t\t\"mode\": \"javascript\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n]"
                     },
                     "schema": [
                        {
                           "key": "json",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Raw Form JSON",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ]
                  },
                  "row": 1,
                  "col": 1,
                  "short_name": "JS code to run",
                  "summary": "Type: code_input"
               },
               "children": []
            }
         ]
      },
      {
         "root": false,
         "label": "Template Builder",
         "element": {
            "enabled": true,
            "row": 0,
            "col": 1,
            "sizeX": 1,
            "sizeY": 1,
            "expandable": true,
            "configurable": true,
            "deletable": true,
            "form_model": {
               "expandable": false,
               "key": "analytic_input",
               "sub_keys": "",
               "categories": "Input",
               "filters": "Bucket/**",
               "child_filters": ""
            },
            "template": {
               "display_name": "Template Builder",
               "form_info": "Create a new template element",
               "filters": [
                  "Template"
               ],
               "expandable": true,
               "key": "template_builder",
               "categories": [
                  "Template"
               ],
               "schema": [
                  {
                     "key": "_short_name",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Template Name",
                        "placeholder": "The template name",
                        "required": true
                     }
                  },
                  {
                     "key": "_summary",
                     "type": "horizontalTextArea",
                     "defaultValue": "<p>Help here</p>",
                     "templateOptions": {
                        "label": "Form Info",
                        "placeholder": "Text or HTML providing help for the user",
                        "required": true
                     }
                  },
                  {
                     "key": "key",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Role/Key",
                        "placeholder": "The role name of the template (used in parent and child filters)",
                        "required": true
                     }
                  },
                  {
                     "key": "sub_keys",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Sub-Role/Keys",
                        "placeholder": "Optional sub-keys used only in child filters",
                        "required": false
                     }
                  },
                  {
                     "key": "categories",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Categories",
                        "placeholder": "Comma-separated list of categories (determines folder name)",
                        "required": true
                     }
                  },
                  {
                     "key": "filters",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Parent Filters",
                        "placeholder": "Comma-separated list of filters determining for which parents this should be displayed",
                        "required": false
                     }
                  },
                  {
                     "key": "expandable",
                     "type": "horizontalCheckbox",
                     "defaultValue": false,
                     "templateOptions": {
                        "label": "Allow child elements",
                        "required": false
                     }
                  },
                  {
                     "key": "child_filters",
                     "type": "horizontalInput",
                     "hideExpression": "!model.expandable",
                     "templateOptions": {
                        "label": "Child Filters",
                        "placeholder": "Comma-separated list of filters determining which child elements should be displayed",
                        "required": false
                     }
                  }
               ],
               "building_function": {
                  "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n\t\tvar obj = {}; \n\t\tobj.display_name = template.element.short_name; \n\t\tobj.form_info = template.element.summary;\n\t\ta2_copy(template.element.form_model, obj);\n\t\tobj.categories = a2_csv_to_array(obj.categories);\n\t\tobj.sub_keys = a2_csv_to_array(obj.sub_keys);\n  \t\tif (0 == (obj.sub_keys || []).length) obj.sub_keys = undefined;\n\t\tobj.filters = a2_csv_to_array(obj.filters);\n\t\tobj.child_filters = a2_csv_to_array(obj.child_filters);\n\t\tobj.schema = []; \n\t\tcurr_obj.push(obj); \n\t\treturn obj;  \n}"
               },
               "post_building_function": {
                  "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}"
               }
            },
            "short_name": "Bucket Input",
            "summary": "Input element for adding bucket data"
         },
         "children": [
            {
               "root": false,
               "label": "Builder Functions",
               "element": {
                  "enabled": true,
                  "short_name": "Builder Functions",
                  "summary": "Creating the element from JSON",
                  "row": 0,
                  "col": 0,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "deletable": true,
                  "form_model": {
                     "pre_fn": "function (errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {               \n        var obj = {};\n        obj.data_service = template.element.form_model.data_service;\n        obj.enabled = true;\n        obj.resource_name_or_id = template.element.form_model.resource_name_or_id;\n        var config_obj = {};\n        config_obj.time_max = template.element.form_model.time_max;\n        config_obj.time_min = template.element.form_model.time_min;\n        obj.config = config_obj;\n        curr_obj.inputs.push(obj);\n      }",
                     "post_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}"
                  },
                  "template": {
                     "display_name": "Builder Functions",
                     "form_info": "<p>Write functions to build the objects and sub-objects based on the fields of the forms</p>\n<p>builder_function runs before the element's children; post_builder_function runs afterwards</p>",
                     "filters": [
                        "Template/template_builder"
                     ],
                     "expandable": false,
                     "key": "local_function",
                     "categories": [
                        "Developer"
                     ],
                     "schema": [
                        {
                           "key": "pre_fn",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Building Function",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        },
                        {
                           "key": "post_fn",
                           "type": "code_input",
                           "defaultValue": "{\n}",
                           "templateOptions": {
                              "label": "Post Building Function",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ],
                     "default_model": {
                        "pre_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}",
                        "post_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}"
                     },
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n \tcurr_obj.building_function = {'$fn': template.element.form_model.pre_fn};\n \tcurr_obj.post_building_function = {'$fn': template.element.form_model.post_fn}; \n}"
                     },
                     "post_building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}"
                     }
                  }
               },
               "children": []
            },
            {
               "root": false,
               "label": "Raw Form JSON",
               "element": {
                  "enabled": true,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "configurable": true,
                  "deletable": true,
                  "form_model": {
                     "json": "[{\"key\":\"data_service\",\"type\":\"horizontalInput\",\"defaultValue\":\"search_index_service\",\"templateOptions\":{\"label\":\"Data Service\",\"placeholder\":\"Name of the data service you want to read from (search_index_service, storage_service, document_service.V1DocumentService)\",\"required\":true}}]"
                  },
                  "template": {
                     "display_name": "Raw Form JSON",
                     "key": "template_element",
                     "categories": [
                        "Generic"
                     ],
                     "filters": [
                        "Template/template_builder",
                        "Template/**/template_builder"
                     ],
                     "expandable": false,
                     "form_info": "Type raw JSON objects into here to insert them into the schema",
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) { var obj = eval('(' + template.element.form_model.json + ')'); for (i in obj) curr_obj.schema.push(obj[i]); }"
                     },
                     "default_model": {
                        "json": "[\n\t\t{\n\t\t\t\"key\": \"_short_name\",\n\t\t\t\"type\": \"horizontalInput\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Function Name\",\n\t\t\t\t\"placeholder\": \"The function name (Give it a unique name)\",\n\t\t\t\t\"required\": true\n\t\t\t}\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"key\": \"js\",\n\t\t\t\"type\": \"code_input\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Global Function\",\n\t\t\t\t\"codemirror\": {\n\t\t\t\t\t\"lineNumbers\": true,\n\t\t\t\t\t\"smartIndent\": true,\n\t\t\t\t\t\"mode\": \"javascript\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n]"
                     },
                     "schema": [
                        {
                           "key": "json",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Raw Form JSON",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ]
                  },
                  "row": 0,
                  "col": 1,
                  "short_name": "Data Service",
                  "summary": "Type: horizontalInput"
               },
               "children": []
            },
            {
               "root": false,
               "label": "Raw Form JSON",
               "element": {
                  "enabled": true,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "configurable": true,
                  "deletable": true,
                  "form_model": {
                     "json": "[{\"key\":\"resource_name_or_id\",\"type\":\"horizontalInput\",\"defaultValue\":\"/some/other/bucket\",\"templateOptions\":{\"label\":\"Resource Name\",\"placeholder\":\"Path or ID of the data service you want e.g. bucket full name\",\"required\":true}}]"
                  },
                  "template": {
                     "display_name": "Raw Form JSON",
                     "key": "template_element",
                     "categories": [
                        "Generic"
                     ],
                     "filters": [
                        "Template/template_builder",
                        "Template/**/template_builder"
                     ],
                     "expandable": false,
                     "form_info": "Type raw JSON objects into here to insert them into the schema",
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) { var obj = eval('(' + template.element.form_model.json + ')'); for (i in obj) curr_obj.schema.push(obj[i]); }"
                     },
                     "default_model": {
                        "json": "[\n\t\t{\n\t\t\t\"key\": \"_short_name\",\n\t\t\t\"type\": \"horizontalInput\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Function Name\",\n\t\t\t\t\"placeholder\": \"The function name (Give it a unique name)\",\n\t\t\t\t\"required\": true\n\t\t\t}\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"key\": \"js\",\n\t\t\t\"type\": \"code_input\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Global Function\",\n\t\t\t\t\"codemirror\": {\n\t\t\t\t\t\"lineNumbers\": true,\n\t\t\t\t\t\"smartIndent\": true,\n\t\t\t\t\t\"mode\": \"javascript\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n]"
                     },
                     "schema": [
                        {
                           "key": "json",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Raw Form JSON",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ]
                  },
                  "row": 0,
                  "col": 2,
                  "short_name": "Resource Name",
                  "summary": "Type: horizontalInput"
               },
               "children": []
            },
            {
               "root": false,
               "label": "Raw Form JSON",
               "element": {
                  "enabled": true,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "configurable": true,
                  "deletable": true,
                  "form_model": {
                     "json": "[{\"key\":\"time_max\",\"type\":\"horizontalInput\",\"defaultValue\":\"2 days\",\"templateOptions\":{\"label\":\"Time Max\",\"placeholder\":\"Max days to check (?)\",\"required\":true}}]"
                  },
                  "template": {
                     "display_name": "Raw Form JSON",
                     "key": "template_element",
                     "categories": [
                        "Generic"
                     ],
                     "filters": [
                        "Template/template_builder",
                        "Template/**/template_builder"
                     ],
                     "expandable": false,
                     "form_info": "Type raw JSON objects into here to insert them into the schema",
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) { var obj = eval('(' + template.element.form_model.json + ')'); for (i in obj) curr_obj.schema.push(obj[i]); }"
                     },
                     "default_model": {
                        "json": "[\n\t\t{\n\t\t\t\"key\": \"_short_name\",\n\t\t\t\"type\": \"horizontalInput\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Function Name\",\n\t\t\t\t\"placeholder\": \"The function name (Give it a unique name)\",\n\t\t\t\t\"required\": true\n\t\t\t}\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"key\": \"js\",\n\t\t\t\"type\": \"code_input\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Global Function\",\n\t\t\t\t\"codemirror\": {\n\t\t\t\t\t\"lineNumbers\": true,\n\t\t\t\t\t\"smartIndent\": true,\n\t\t\t\t\t\"mode\": \"javascript\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n]"
                     },
                     "schema": [
                        {
                           "key": "json",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Raw Form JSON",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ]
                  },
                  "row": 0,
                  "col": 3,
                  "short_name": "Time Max",
                  "summary": "Type: horizontalInput"
               },
               "children": []
            },
            {
               "root": false,
               "label": "Raw Form JSON",
               "element": {
                  "enabled": true,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "configurable": true,
                  "deletable": true,
                  "form_model": {
                     "json": "[{\"key\":\"time_min\",\"type\":\"horizontalInput\",\"defaultValue\":\"4 days\",\"templateOptions\":{\"label\":\"Time Min\",\"placeholder\":\"Min days to check (?)\",\"required\":true}}]"
                  },
                  "template": {
                     "display_name": "Raw Form JSON",
                     "key": "template_element",
                     "categories": [
                        "Generic"
                     ],
                     "filters": [
                        "Template/template_builder",
                        "Template/**/template_builder"
                     ],
                     "expandable": false,
                     "form_info": "Type raw JSON objects into here to insert them into the schema",
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) { var obj = eval('(' + template.element.form_model.json + ')'); for (i in obj) curr_obj.schema.push(obj[i]); }"
                     },
                     "default_model": {
                        "json": "[\n\t\t{\n\t\t\t\"key\": \"_short_name\",\n\t\t\t\"type\": \"horizontalInput\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Function Name\",\n\t\t\t\t\"placeholder\": \"The function name (Give it a unique name)\",\n\t\t\t\t\"required\": true\n\t\t\t}\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"key\": \"js\",\n\t\t\t\"type\": \"code_input\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Global Function\",\n\t\t\t\t\"codemirror\": {\n\t\t\t\t\t\"lineNumbers\": true,\n\t\t\t\t\t\"smartIndent\": true,\n\t\t\t\t\t\"mode\": \"javascript\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n]"
                     },
                     "schema": [
                        {
                           "key": "json",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Raw Form JSON",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ]
                  },
                  "row": 1,
                  "col": 0,
                  "short_name": "Time Min",
                  "summary": "Type: horizontalInput"
               },
               "children": []
            }
         ]
      },
      {
         "root": false,
         "label": "Template Builder",
         "element": {
            "enabled": true,
            "row": 0,
            "col": 2,
            "sizeX": 1,
            "sizeY": 1,
            "expandable": true,
            "configurable": true,
            "deletable": true,
            "form_model": {
               "expandable": false,
               "key": "analytic_output",
               "sub_keys": "",
               "categories": "Output",
               "filters": "Bucket/**",
               "child_filters": ""
            },
            "template": {
               "display_name": "Template Builder",
               "form_info": "Create a new template element",
               "filters": [
                  "Template"
               ],
               "expandable": true,
               "key": "template_builder",
               "categories": [
                  "Template"
               ],
               "schema": [
                  {
                     "key": "_short_name",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Template Name",
                        "placeholder": "The template name",
                        "required": true
                     }
                  },
                  {
                     "key": "_summary",
                     "type": "horizontalTextArea",
                     "defaultValue": "<p>Help here</p>",
                     "templateOptions": {
                        "label": "Form Info",
                        "placeholder": "Text or HTML providing help for the user",
                        "required": true
                     }
                  },
                  {
                     "key": "key",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Role/Key",
                        "placeholder": "The role name of the template (used in parent and child filters)",
                        "required": true
                     }
                  },
                  {
                     "key": "sub_keys",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Sub-Role/Keys",
                        "placeholder": "Optional sub-keys used only in child filters",
                        "required": false
                     }
                  },
                  {
                     "key": "categories",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Categories",
                        "placeholder": "Comma-separated list of categories (determines folder name)",
                        "required": true
                     }
                  },
                  {
                     "key": "filters",
                     "type": "horizontalInput",
                     "templateOptions": {
                        "label": "Parent Filters",
                        "placeholder": "Comma-separated list of filters determining for which parents this should be displayed",
                        "required": false
                     }
                  },
                  {
                     "key": "expandable",
                     "type": "horizontalCheckbox",
                     "defaultValue": false,
                     "templateOptions": {
                        "label": "Allow child elements",
                        "required": false
                     }
                  },
                  {
                     "key": "child_filters",
                     "type": "horizontalInput",
                     "hideExpression": "!model.expandable",
                     "templateOptions": {
                        "label": "Child Filters",
                        "placeholder": "Comma-separated list of filters determining which child elements should be displayed",
                        "required": false
                     }
                  }
               ],
               "building_function": {
                  "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n\t\tvar obj = {}; \n\t\tobj.display_name = template.element.short_name; \n\t\tobj.form_info = template.element.summary;\n\t\ta2_copy(template.element.form_model, obj);\n\t\tobj.categories = a2_csv_to_array(obj.categories);\n\t\tobj.sub_keys = a2_csv_to_array(obj.sub_keys);\n  \t\tif (0 == (obj.sub_keys || []).length) obj.sub_keys = undefined;\n\t\tobj.filters = a2_csv_to_array(obj.filters);\n\t\tobj.child_filters = a2_csv_to_array(obj.child_filters);\n\t\tobj.schema = []; \n\t\tcurr_obj.push(obj); \n\t\treturn obj;  \n}"
               },
               "post_building_function": {
                  "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}"
               }
            },
            "short_name": "Basic Output",
            "summary": "Input element for adding bucket data"
         },
         "children": [
            {
               "root": false,
               "label": "Builder Functions",
               "element": {
                  "enabled": true,
                  "short_name": "Builder Functions",
                  "summary": "Creating the element from JSON",
                  "row": 0,
                  "col": 0,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "deletable": true,
                  "form_model": {
                     "pre_fn": "function (errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {               \n        var obj = {};\n        obj.is_transient = template.element.form_model.is_transient || false;\n        obj.preserve_existing_data = template.element.form_model.preserve_existing_data || false;        \n        curr_obj.output = obj;\n      }",
                     "post_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}"
                  },
                  "template": {
                     "display_name": "Builder Functions",
                     "form_info": "<p>Write functions to build the objects and sub-objects based on the fields of the forms</p>\n<p>builder_function runs before the element's children; post_builder_function runs afterwards</p>",
                     "filters": [
                        "Template/template_builder"
                     ],
                     "expandable": false,
                     "key": "local_function",
                     "categories": [
                        "Developer"
                     ],
                     "schema": [
                        {
                           "key": "pre_fn",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Building Function",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        },
                        {
                           "key": "post_fn",
                           "type": "code_input",
                           "defaultValue": "{\n}",
                           "templateOptions": {
                              "label": "Post Building Function",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ],
                     "default_model": {
                        "pre_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}",
                        "post_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}"
                     },
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n \tcurr_obj.building_function = {'$fn': template.element.form_model.pre_fn};\n \tcurr_obj.post_building_function = {'$fn': template.element.form_model.post_fn}; \n}"
                     },
                     "post_building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) {\n  \n}"
                     }
                  }
               },
               "children": []
            },
            {
               "root": false,
               "label": "Raw Form JSON",
               "element": {
                  "enabled": true,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "configurable": true,
                  "deletable": true,
                  "form_model": {
                     "json": "[{\"key\":\"is_transient\",\"type\":\"horizontalCheckbox\",\"defaultValue\":\"false\",\"templateOptions\":{\"label\":\"Is Transient?\",\"required\":false}}]"
                  },
                  "template": {
                     "display_name": "Raw Form JSON",
                     "key": "template_element",
                     "categories": [
                        "Generic"
                     ],
                     "filters": [
                        "Template/template_builder",
                        "Template/**/template_builder"
                     ],
                     "expandable": false,
                     "form_info": "Type raw JSON objects into here to insert them into the schema",
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) { var obj = eval('(' + template.element.form_model.json + ')'); for (i in obj) curr_obj.schema.push(obj[i]); }"
                     },
                     "default_model": {
                        "json": "[\n\t\t{\n\t\t\t\"key\": \"_short_name\",\n\t\t\t\"type\": \"horizontalInput\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Function Name\",\n\t\t\t\t\"placeholder\": \"The function name (Give it a unique name)\",\n\t\t\t\t\"required\": true\n\t\t\t}\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"key\": \"js\",\n\t\t\t\"type\": \"code_input\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Global Function\",\n\t\t\t\t\"codemirror\": {\n\t\t\t\t\t\"lineNumbers\": true,\n\t\t\t\t\t\"smartIndent\": true,\n\t\t\t\t\t\"mode\": \"javascript\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n]"
                     },
                     "schema": [
                        {
                           "key": "json",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Raw Form JSON",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ]
                  },
                  "row": 0,
                  "col": 1,
                  "short_name": "Is Transient?",
                  "summary": "Type: horizontalCheckbox"
               },
               "children": []
            },
            {
               "root": false,
               "label": "Raw Form JSON",
               "element": {
                  "enabled": true,
                  "sizeX": 1,
                  "sizeY": 1,
                  "expandable": false,
                  "configurable": true,
                  "deletable": true,
                  "form_model": {
                     "json": "[{\"key\":\"preserve_existing_data\",\"type\":\"horizontalCheckbox\",\"defaultValue\":\"false\",\"templateOptions\":{\"label\":\"Preserve existing data?\",\"required\":false}}]"
                  },
                  "template": {
                     "display_name": "Raw Form JSON",
                     "key": "template_element",
                     "categories": [
                        "Generic"
                     ],
                     "filters": [
                        "Template/template_builder",
                        "Template/**/template_builder"
                     ],
                     "expandable": false,
                     "form_info": "Type raw JSON objects into here to insert them into the schema",
                     "building_function": {
                        "_fn": "function(errs, template, curr_obj, all_templates, root_obj, hierarchy, rows, cols) { var obj = eval('(' + template.element.form_model.json + ')'); for (i in obj) curr_obj.schema.push(obj[i]); }"
                     },
                     "default_model": {
                        "json": "[\n\t\t{\n\t\t\t\"key\": \"_short_name\",\n\t\t\t\"type\": \"horizontalInput\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Function Name\",\n\t\t\t\t\"placeholder\": \"The function name (Give it a unique name)\",\n\t\t\t\t\"required\": true\n\t\t\t}\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"key\": \"js\",\n\t\t\t\"type\": \"code_input\",\n\t\t\t\"templateOptions\": {\n\t\t\t\t\"label\": \"Global Function\",\n\t\t\t\t\"codemirror\": {\n\t\t\t\t\t\"lineNumbers\": true,\n\t\t\t\t\t\"smartIndent\": true,\n\t\t\t\t\t\"mode\": \"javascript\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n]"
                     },
                     "schema": [
                        {
                           "key": "json",
                           "type": "code_input",
                           "templateOptions": {
                              "label": "Raw Form JSON",
                              "codemirror": {
                                 "lineNumbers": true,
                                 "smartIndent": true,
                                 "mode": "javascript"
                              }
                           }
                        }
                     ]
                  },
                  "row": 0,
                  "col": 2,
                  "short_name": "Preserve existing data?",
                  "summary": "Type: horizontalCheckbox"
               },
               "children": []
            }
         ]
      }
   ]
}
