<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ikanow.aleph2</groupId>
  <artifactId>aleph2_spark_script_engine</artifactId>
    <version>${aleph2.version}</version>
    <properties>
        <aleph2.version>2.9.0</aleph2.version>
        <aleph2.scope>provided</aleph2.scope>
        <aleph2.hadoop>2.7.1</aleph2.hadoop>
        <aleph2.spark>1.5.2</aleph2.spark>
		<maven.test.skip>true</maven.test.skip>
		<!-- provided normally, compile for internal testing -->
		<testing.mode>provided</testing.mode>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <sourceEncoding>UTF-8</sourceEncoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.2.201409121644</version>
                <configuration>
                    <excludes>
                        <!-- This actually removes code from coveralls.io -->
                        <exclude>**/hadoop/assets/UpdatedFileInputFormat*</exclude>
                        <exclude>**/hadoop/assets/UpdatedCombineFileInputFormat*</exclude>
                        <!-- Example: <exclude>**/path/to/package/*</exclude> -->
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--  execute using: mvn -e clean package shade:shade -Dmaven.test.skip=true -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                        	<filters>
                        	</filters>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
						</manifest>
					</archive>
				</configuration>
			</plugin>

        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.jacoco</groupId>
                                        <artifactId>
                                            jacoco-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.7.2.201409121644,)
                                        </versionRange>
                                        <goals>
                                            <goal>prepare-agent</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <dependencies>
        <dependency>
            <groupId>jdk.tools</groupId>
            <artifactId>jdk.tools</artifactId>
            <version>${java.version}</version>
            <scope>system</scope>
		    <systemPath>${JAVA_HOME}/lib/tools.jar</systemPath>
        </dependency>
 		
        <!-- Note these are provided - there's no spark code called to kick spark off so only need it in YARN context where we'll have it externally -->
        <!--  (this is fortunate because there's a significant amount of JAR version conflicts here) -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.10</artifactId>
            <version>${aleph2.spark}</version>
            <scope>provided</scope>
            <exclusions>
            	<exclusion>
            		<artifactId>hadoop-client</artifactId>
            		<groupId>org.apache.hadoop</groupId>
            	</exclusion>
            	<exclusion>
            		<artifactId>scala-library</artifactId>
            		<groupId>org.scala-lang</groupId>
            	</exclusion>
            </exclusions>        
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.10</artifactId>
            <version>${aleph2.spark}</version>
            <scope>provided</scope>
        </dependency>
		<dependency>
			<groupId>org.scala-lang.modules</groupId>
			<artifactId>scala-java8-compat_2.10</artifactId>
			<version>0.5.0</version>
		</dependency>
        <!-- Added these to try to get the spark interpreter working, in practice should probably make an example project
             (NOTE V DEPENDENT ON SPARK/SCALA VERSION)
 		-->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-repl_2.10</artifactId>
            <version>${aleph2.spark}</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
            <scope>compile</scope>
        </dependency>
        <dependency>
			  <groupId>org.scala-lang</groupId>
			  <artifactId>scala-compiler</artifactId>
			  <version>2.10.4</version>
			  <exclusions>
			  	<exclusion>
			  		<artifactId>scala-library</artifactId>
			  		<groupId>org.scala-lang</groupId>
			  	</exclusion>
			  </exclusions>
        </dependency>
        <!-- Example of internal dependency (always need data model anyway) -->
        <dependency>
            <groupId>com.ikanow.aleph2</groupId>
            <artifactId>aleph2_data_model</artifactId>
            <version>${aleph2.version}</version>
            <scope>${aleph2.scope}</scope>
            <exclusions>
            	<exclusion>
            		<artifactId>scala-library</artifactId>
            		<groupId>org.scala-lang</groupId>
            	</exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.ikanow.aleph2</groupId>
            <artifactId>aleph2_core_shared_library</artifactId>
            <version>${aleph2.version}</version>
            <scope>${aleph2.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.ikanow.aleph2</groupId>
            <artifactId>aleph2_analytic_services_spark</artifactId>
            <version>${aleph2.version}</version>
            <scope>${aleph2.scope}</scope>
            <exclusions>
            	<exclusion>
            		<artifactId>
            			aleph2_analytic_services_hadoop
            		</artifactId>
            		<groupId>com.ikanow.aleph2</groupId>
            	</exclusion>
            </exclusions>
        </dependency>
        <!-- Don't want to include this since can either run in 2.10 or 2.11 depending on context: -->
        <dependency>
       		<artifactId>scala-library</artifactId>
       		<groupId>org.scala-lang</groupId>
			<version>2.10.4</version>
       		<scope>${testing.mode}</scope>
        </dependency>
    </dependencies>
	
	<profiles>
	
		<!-- Attempt to get a test setup with Spark -->
		<profile>
			<id>normal_dependencies</id>
			<activation>
				<property>
					<name>skipTests</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
			<dependencies>
			</dependencies>
		</profile>
	
		<!-- Test dependencies -->
		<profile>
			<id>test_dependencies</id>
			<activation>
				<property>
					<name>skipTests</name>
					<value>!true</value>
				</property>
			</activation>
			<properties>
				<maven.test.skip>false</maven.test.skip>
			</properties>
			<dependencies>
				<!-- System -->
		        <dependency>
		            <groupId>junit</groupId>
		            <artifactId>junit</artifactId>
		            <version>4.12</version>
		            <scope>test</scope>
		        </dependency>
				<dependency>
					<groupId>org.mockito</groupId>
					<artifactId>mockito-all</artifactId>
					<version>1.9.5</version>
					<scope>test</scope>
				</dependency>		
		        
				<!-- Aleph2 -->
				<!-- 
				(can't include this or anything that includes akka because it causes akka mismatch problems...)
				<dependency>
					<groupId>com.ikanow.aleph2</groupId>
					<artifactId>aleph2_analytics_context_library</artifactId>
					<version>${aleph2.version}</version>
					<scope>test</scope>
				</dependency>
				 -->
				<!-- TODO -->
				<!-- 
				<dependency>
					<groupId>com.ikanow.aleph2</groupId>
					<artifactId>aleph2_storage_service_hdfs</artifactId>
					<version>${aleph2.version}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.ikanow.aleph2</groupId>
					<artifactId>aleph2_management_db_service_mongodb</artifactId>
					<version>${aleph2.version}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.ikanow.aleph2</groupId>
					<artifactId>aleph2_search_index_service_elasticsearch</artifactId>
					<version>${aleph2.version}</version>
					<scope>test</scope>
				</dependency>		
				<dependency>
					<groupId>com.ikanow.aleph2</groupId>
					<artifactId>aleph2_logging_service</artifactId>
					<version>${aleph2.version}</version>
					<scope>test</scope>
				</dependency>
				 -->
			</dependencies>
		</profile>
	</profiles>	
</project>
